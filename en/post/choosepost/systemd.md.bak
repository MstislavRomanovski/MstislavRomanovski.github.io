---
# Documentation: https://wowchemy.com/docs/managing-content/

title: "Systemd"
subtitle: ""
summary: ""
authors: []
tags: []
categories: []
date: 2022-06-04T14:02:06+03:00
lastmod: 2022-06-04T14:02:06+03:00
featured: false
draft: false

# Featured image
# To use, add an image named `featured.jpg/png` to your page's folder.
# Focal points: Smart, Center, TopLeft, Top, TopRight, Left, Right, BottomLeft, Bottom, BottomRight.
image:
  caption: ""
  focal_point: ""
  preview_only: false

# Projects (optional).
#   Associate this post with one or more of your projects.
#   Simply enter your project's folder or file name without extension.
#   E.g. `projects = ["internal-project"]` references `content/project/deep-learning/index.md`.
#   Otherwise, set `projects = []`.
projects: []
---
# Systemd


Systemd --- это набор основных строительных блоков для системы Linux. Он
предоставляет диспетчер системы и служб, который работает как PID 1 и
запускает остальную часть системы. Systemd предоставляет: \* Агрессивные
возможности распараллеливания

-   Использует активацию сокета и D-Bus для запуска служб.

-   Предлагает запуск демонов по запросу, отслеживает процессы с помощью
    контрольных групп Linux.

-   Поддерживает моментальные снимки и восстановление состояния системы

-   Поддерживает точки монтирования и автомонтирования

-   Реализует сложную логику управления службами на основе
    транзакционных зависимостей.

Systemd предоставляет систему зависимостей между различными
сущностями,называемыми «юнитами»(модулями/задачами), которыми systemd
может управлять. Модули инкапсулируют различные объекты, необходимые для
загрузки и обслуживания системы. Большинство юнитов настраиваются в
конфигурационных файлах юнитов, синтаксис и базовый набор параметров
которых описан в systemd.unit(5) , однако некоторые создаются
автоматически из других конфигурационных файлов, динамически из
состояния системы или программно во время выполнения. Устройства могут
быть «активными» (что означает запущенные, связанные, подключенные, ...,
в зависимости от типа устройства, см.ниже) или «неактивными» (что
означает остановленные, несвязанные, отключенные, ...), а также в
процессе активации или деактивации, т.е. между двумя состояниями (эти
состояния называются «активация», «деактивация»). Также доступно
специальное состояние «сбой», которое очень похоже на «неактивное» и
вводится, когда служба каким-либо образом не удалась (процесс вернул код
ошибки при выходе или произошел сбой, время ожидания операции истекло
или после слишком большого количества перезапусков). ). Если это
состояние введено, причина будет зарегистрирована для дальнейшего
использования. Доступны следующие типы юнитов:

-   service - Служба в системе, включая инструкции по запуску,
    перезапуску и остановке службы.

-   socket - Сетевой сокет, связанный со службой.

-   device - Устройство, специально управляемое с помощью systemd.

-   mount - Точка монтирования, управляемая с помощью systemd.

-   automount - Точка монтирования автоматически монтируется при
    загрузке.

-   swap - Поменять местами в системе.

-   target - Точка синхронизации для других юнитов. Обычно используется
    для запуска включенных служб при загрузке.

-   path - Путь для активации на основе пути. Например, вы можете
    запускать службы на основе состояния определенного пути, например,
    существует он или нет.

-   timer - Таймер для планирования активации другого устройства.

-   snapshot - "Снимок"(snapshot) текущего состояния systemd. Обычно
    используется для отката после внесения временных изменений в systemd

-   slice - Ограничение ресурсов через узлы Linux Control Group
    (cgroups).

-   scope - Информация с интерфейсов шины systemd. Обычно используется
    для управления внешними системными процессами.

-   А вот расположение файлов модулей systemd ( Скриншот 1 )

![Screenshot_1](/Screenshots/Screenshot_1.png) ( Скриншот 1 )

# Немного о структуре Юнитов

![Screenshot_2](/Screenshots/Screenshot_2.png) ( Скриншот 2 )

На скриншоте 1 мы можем наблюдать некоторую структуру файла унита nginx:

1.  \[Unit\] --- Обычно здесь описаны метаданные службы и её
    взаимодействие с другими службами.

-   Description --- краткое описание демона

-   Documentation --- страница man, где описана работа со службой, в
    данном случае Nginx

-   After --- Дословно означает «После». Поле указывает, после каких
    демонов или событий данный юнит будет запущен. На нашем примере,
    юнит Nginx будет запущен после того, как поднимутся сетевые
    интерфейсы.

2.  \[Service\] --- Описывает конфигурацию. Применяется только для
    юнитов служб.

Type --- Важный параметр. Описывает, каким образом демон будет запущен.
В нашем варианте это forking, но вы можете столкнуться и с другими:

-   forking --- после запуска демон ответвляется (fork), завершая
    родительский процесс;

-   simple --- при запуске, демон переходит в режим ожидания, в своем
    первоначальном виде;

-   one-shot --- одноразовое выполнение. Данный тип используется для
    скриптов, которые должны запуститься, и завершиться после
    выполнения.

-   PIDFile --- указывает на основной процесс, который отслеживает
    systemd

-   ExecStartPre --- основной путь и аргументы, с которыми будет
    запущена команда ДО запуска основного процесса

-   ExecStart --- основной путь и аргументы, с которым будет запущен
    Nginx

-   ExecReload --- указывает команду для перезапуска службы

-   ExecStop --- команда для остановки службы

-   TimeoutStopSec --- Указывает, что система будет ждать 5 секунд
    остановки службы, прежде чем остановить её принудительно

3.  \[Install\] --- описывает поведение юнита.

-   WantedBy --- описывает как именно устройство будет включено.
    multi-user.target означает, что при запуске, в каталоге
    /etc/systemd/system будет создан каталог multi-user.target.wants, в
    котором будет создана символическая ссылка на службу. Это параметр
    зависимости с текущим блоком, когда вы остановите службу, эта ссылка
    будет удалена.

# Systemctl


Вы можете выполнять различные задачи управления для управления службами
systemd с помощью команды `systemctl`. Ниже приведен набор примеров
команд, демонстрирующих, как использовать systemctl для управления
службами systemd ( Скриншоты 3 - 4 ).

![Screenshot_3](/Screenshots/Screenshot_3.png) ( Скриншот 3 )

![Screenshot_4](/Screenshots/Screenshot_4.png) ( Скриншот 4 )

С полным списком параметров для команды `systemctl` можно ознакомитсья
воспользовавшись командой `man systemctl`.

# Другие команды systemd из системы \*ctl

Наряду с основным инструментом systemctl для управления целевыми и
сервисными юнитами systemd предоставляет кучу других полезных утилит:

1.  Команда `timedatecl` . Эта команда предоставляет удобный интерфейс
    для изменения информации о дате и часовом поясе для системы.
2.  Команда `hostnamectl`. Эта команда позволяет нам постоянно изменять
    имя хоста системы без необходимости редактировать какие-либо файлы.
3.  Команда `localectl`. Позволяет менять системный настройки локали.
4.  Команда `loginctl` . `loginctl` можно использовать для интроспекции
    и управления состоянием systemd login manager
    systemd-logind.service.
5.  Команда `journalctl`.Используется для запроса содержимого журнала
    systemd (1).

# Источники


1.  <https://freehost.com.ua/faq/articles/ispolzovanie-systemd/>
2.  <https://mirivlad.ru/vvedenie-v-systemd/>
3.  <https://man7.org/linux/man-pages/man1/systemctl.1.html>
4.  <https://docs.fedoraproject.org/en-US/packaging-guidelines/Systemd/#definitions>
5.  <https://man7.org/linux/man-pages/man1/systemd.1.html>
6.  <https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/system_administrators_guide/chap-managing_services_with_systemd>
7.  <https://docs.fedoraproject.org/en-US/quick-docs/understanding-and-administering-systemd/>